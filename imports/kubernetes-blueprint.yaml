tosca_definitions_version: cloudify_dsl_1_3

node_templates:

  kubernetes_master:
    type: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/docker_install.py # Install Docker if not already installed.
        start:
          implementation: fabric.fabric_plugin.tasks.run_commands
          inputs:
            fabric_env:
              host_string: { get_attribute: [ kubernetes_master_host, ip ] }
              user: { get_input: agent_user }
              key_filename: { get_input: private_key_path }
            commands:
              - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
              - "chmod +x kubectl"
              - "rm -rf kube-deploy"
              - "curl -L https://github.com/kubernetes/kube-deploy/archive/master.tar.gz | tar xz && cd kube-deploy-master/docker-multinode;sudo ./master.sh"
    relationships:
      - type: cloudify.relationships.contained_in
        target: kubernetes_master_host

  kubernetes_node:
    type: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/docker_install.py # Install Docker if not already installed.
        start:
          implementation: fabric.fabric_plugin.tasks.run_commands
          inputs:
            fabric_env:
              host_string: { get_attribute: [ kubernetes_node_host, ip ] }
              user: { get_input: agent_user }
              key_filename: { get_input: private_key_path }
            commands:
              - "rm -rf kube-deploy"
              - { concat: [ "curl -L https://github.com/kubernetes/kube-deploy/archive/master.tar.gz | tar xz && cd kube-deploy-master/docker-multinode;sudo MASTER_IP=", { get_attribute: [ kubernetes_master_host, ip ] }," ./worker.sh" ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: kubernetes_master
      - type: cloudify.relationships.contained_in
        target: kubernetes_node_host

  kubectl:
    # For convenience, we install the kubectl on your master.
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/kubectl.py
          inputs:
            kubectl_url: 'http://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kubectl'
    relationships:
      - type: cloudify.relationships.contained_in
        target: kubernetes_master_host
